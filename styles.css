/* ------------
      BASICS
   ------------ */

*,
*::before,
*::after {
    box-sizing: border-box;
}

:root {
    --primary-bg: #fcfcfc;
    --secondary-bg: #f3f3f3;
    --tertiary-bg: #ccc;

    --primary-text: rgba(0, 0, 0, .7);
    --secondary-text: #333;
    --tertiary-text: #777;

    --border-radius: .7em;
    --box-shadow: 0 3px 10px -3px rgba(0, 0, 0, .1);

    --anim-length: 10px;
    --anim-slow: 275ms;
    --anim-fast: 150ms;

    --ease-in-out-expo: cubic-bezier(0.4, 0, 0.2, 1);
    --ease-in-out-quad: cubic-bezier(0.46, 0.03, 0.52, 0.96);
    --ease-out-quad: cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

@media (prefers-reduced-motion) {

    :root {
        --anim-length: 0;
    }

}

html {
    font-size: 16px;
}

@media (min-width: 900px) {

    html {
        font-size: 17px;
    }

}

@media (min-width: 1400px) {

    html {
        font-size: 18px;
    }

}

body {
    color: var(--primary-text);
    background: var(--primary-bg);
    font: 1em/1.45 system-ui, -apple-system, 'Segoe UI', 'Roboto', 'Helvetica', 'Arial', sans-serif;
    margin: 0;
}

h1,
h2,
h3 {
    color: var(--secondary-text);
}

h1 {
    line-height: 1;
    margin: 0;
}

h2 {
    margin: 5rem 0 .5rem;
}

h2,
h3 {
    line-height: 1.2;
}

p {
    margin: 0 0 2em;
}

code {
    font-family: ui-monospace, monospace;
}

a {
    color: var(--tertiary-text);
}

/* -----------------
       KEYFRAMES
   ----------------- */

@keyframes fade-in {

   0% {
       opacity: 0;
   }

   100% {
       opacity: 1;
   }

}

@keyframes fade-out {

   0% {
       opacity: 1;
   }

   100% {
       opacity: 0;
   }

}

@keyframes enter-top {

   0% {
       transform: translateY(calc(var(--anim-length) * -1));
   }

   100% {
       transform: translateX(0);
   }

}

@keyframes enter-left {

   0% {
       transform: translateX(calc(var(--anim-length) / (3/4)));
   }

   100% {
       transform: translateX(0);
   }

}

@keyframes exit-left {

   0% {
       transform: translateX(0);
   }

   100% {
       transform: translateX(calc(var(--anim-length) * -1));
   }

}

@keyframes enter-right {

   0% {
       transform: translateX(calc(var(--anim-length) * -1 / (3/4)));
   }

   100% {
       transform: translateX(0);
   }

}

@keyframes exit-right {

   0% {
       transform: translateX(0);
   }

   100% {
       transform: translateX(var(--anim-length));
   }

}

/* --------------
       HEADER
   -------------- */

header {
    --header-size: 4rem;

    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-flow: row wrap;
    /* transform: skewY(-4deg); */
}

.h1-container {
    width: 100%;
    display: flex;
    justify-content: center;
    align-self: flex-end;
    margin: -3em 0 3.5em;
}

header span {
    display: block;
    animation: 1.4s both var(--ease-out-quad);
    animation-name: fade-in, enter-top;
}

header span:nth-child(1) {
    animation-delay: .2s;
    display: inline-block;
    font-size: calc(var(--header-size) * 2.5);
    font-weight: 600;
    background: linear-gradient(to right, #70c9ff 10%, #eae41e, #e19aff, #ff9e9e 90%);
    -webkit-text-fill-color: transparent;
    -webkit-background-clip: text;
}

header span:nth-child(2) {
    animation-delay: .5s;
    color: rgba(35, 42, 47, .5);
    font-size: var(--header-size);
    margin: .1em 0 -0.1em;
}

header span:nth-child(3) {
    animation-delay: .8s;
    font-size: calc(var(--header-size) * 1.25);
}

/* @TODO: at <900px make it overflow and scroll */
.wiki-cards {
    display: grid;
    grid-gap: 1em;
    align-self: flex-start;

    width: 100vw;
    max-width: 75em;
    padding: 0 2em;
    animation: 1.2s 1.2s both var(--ease-out-quad);
    animation-name: fade-in, enter-top;
}

.wiki-card {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 9em;
    padding: 1em 1.5em;
    position: relative;
    overflow: hidden;

    text-decoration: none;
    background-color: var(--secondary-bg);
    border-radius: calc(var(--border-radius) * 1.1);
    box-shadow:
        inset 0 0 0px 2px rgba(255, 255, 255, .35),
        inset 0 0 0px 1px rgba(0, 0, 0, .35),
        0 30px 60px -12px rgba(50, 50, 93, .25),
        0 18px 36px -18px rgba(0, 0, 0, .3),
        0 -12px 36px -8px rgba(0, 0, 0, .025);


    /* needed for gainPerspective() in main.js */
    transition: transform .5s ease;
    transform: perspective(500px);
}

/* background image on a separate pseudo-element so opacity can be changed */
.wiki-card::before {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;

    opacity: 0.6;
    filter: saturate(0.75);
    background-position: center;
    background-size: cover;
}

.wiki-card div {
    color: white;
    font-size: 1.25em;
    line-height: 1.3;
    text-align: center;
    text-shadow: 0 2px 10px rgba(0, 0, 0, .5);
}

.card-rs {
    background-color: #2e84b9;
}

.card-rs::before {
    background-image: url(images/card-rs.jpg);
}

.card-osrs {
    background-color: #b2b548;
}

.card-osrs::before {
    background-image: url(images/card-osrs.jpg);
}

.card-ptbr {
    background-color: #d292f3;
}

.card-ptbr::before {
    background-image: url(images/card-ptbr.jpg);
}

.card-rsc {
    background-color: #e7a085;
}

.card-rsc::before {
    background-image: url(images/card-rsc.jpg);
}

@media (max-width: 501px) {

    header {
        height: initial;
    }

    .h1-container {
        margin-top: 5em;
    }

    .wiki-cards {
        grid-template-columns: none;
        grid-gap: .75em;
    }

    .wiki-card {
        height: 7em;
    }

    .container {
        margin-top: 5em;
    }

}

@media (min-width: 501px) and (max-width: 900px) {

    .wiki-cards {
        grid-template-columns: repeat(2, 1fr);
    }

}

@media (max-width: 900px) {

    header {
        --header-size: 3.25rem;
    }

}

@media (min-width: 900px) {

    .wiki-cards {
        grid-template-columns: repeat(4, 1fr);
    }

}

/* ------------
       MAIN
   ------------ */

.container {
    max-width: 800px;
    padding: 0 2em;
    margin: 1em auto 5em;
}

.stats-grid {
    --breakout-margin: -4em;

    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-gap: 1.25em;
    margin: 0 var(--breakout-margin) 3em;
}

.stat-header {
    margin: 0;
}

.stat {
    background-color: white;
    padding: 1.5em 1.75em;
    border-radius: var(--border-radius);
    box-shadow: var(--box-shadow);
}

.stat dt {
    color: var(--stat-color);
    font-size: 3em;
    font-weight: bold;
}

.stat dd {
    margin-left: 0;
    font-size: .9em;
}

.stat ol {
    margin-bottom: 0;
    padding-left: 2em;
}

.stat ::marker {
    color: var(--stat-color);
    font-weight: bold;
}

.section-rs .stat {
    --stat-color: #42acec;
}

.section-osrs .stat {
    --stat-color: #90cc1d;
}

.section-ptbr .stat {
    --stat-color: #9592fd;
}

.section-rsc .stat {
    --stat-color: #de897b;
}

@media (max-width: 501px) {

    .container,
    .wiki-cards {
        padding: 0 1em;
    }

    .container {
        margin-top: 5em;
    }

    .stats-grid {
        grid-template-columns: none;
    }

}

@media screen and (min-width: 501px) and (max-width: 700px) {

    .stats-grid {
        grid-template-columns: repeat(2, 1fr);
    }

}

@media screen and (max-width: 800px) {

    .stats-grid {
        margin-left: 0;
        margin-right: 0;
    }

}

/* ------------
       TABS
   ------------ */

.tabs {
    --tab-count: 4;
    --tab-gap: .25em;

    position: relative;
    overflow: hidden;
    z-index: 1; /* stop bg flicker when switching tabs */

    font-size: .9em;
    background-color: var(--secondary-bg);
    margin: 2em auto;
    border-radius: calc(var(--border-radius) + var(--tab-gap));
    max-width: 35em;

    -moz-user-select: none;
    -webkit-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

/* @supports (backdrop-filter: blur(0)) or (-webkit-backdrop-filter: blur(0)) {

    .tabs {
        background-color: rgba(240, 240, 240, .7);
        -webkit-backdrop-filter: blur(10px);
        backdrop-filter: blur(10px);
    }

} */

.tabs::before {
    content: '';
    position: absolute;
    width: calc(100% / var(--tab-count) - var(--tab-gap) * 2);
    height: calc(100% - var(--tab-gap) * 2);
    top: var(--tab-gap);
    left: var(--tab-gap);
    transform: translateX(calc(var(--index) * 100% + var(--index) * var(--tab-gap) * 2));
    transition: calc(var(--anim-slow) + var(--anim-fast)) transform var(--ease-in-out-expo);

    background-color: white;
    border-radius: var(--border-radius);
    box-shadow: var(--box-shadow);
    box-shadow: 0 2px 5px -2px rgba(0, 0, 0, .2);
}

.tabs input {
    position: absolute;
    opacity: 0;
}

.tabs label {
    position: relative;
    float: left;
    width: calc(100% / var(--tab-count));
    transition: calc(var(--anim-slow) + var(--anim-fast)) color var(--ease-in-out-expo);

    color: var(--tertiary-text);
    text-align: center;
    padding: 13px 0;
}

.tabs input:checked + label {
    color: var(--secondary-text);
}

.label-short {
    display: none;
}

@media (max-width: 450px) {

    .label-long {
        display: none;
    }

    .label-short {
        display: inline;
    }

}

/* --------------
      SECTIONS
   -------------- */

.section-rs,
.section-osrs,
.section-ptbr,
.section-rsc {
    display: none;
    animation-fill-mode: both;
    animation-timing-function: var(--ease-in-out-quad);
}

.stats-grid.section-visible {
    display: grid;
}

/* added via tabSwitcher() in main.js */
.slide-left-fade-in {
    animation-name: enter-left, fade-in;
    animation-duration: var(--anim-slow);
}

.slide-left-fade-out {
    animation-name: exit-left, fade-out;
    animation-duration: var(--anim-fast);
}

.slide-right-fade-in {
    animation-name: enter-right, fade-in;
    animation-duration: var(--anim-slow);
}

.slide-right-fade-out {
    animation-name: exit-right, fade-out;
    animation-duration: var(--anim-fast);
}